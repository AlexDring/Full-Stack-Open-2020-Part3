{"version":3,"sources":["components/Filter.js","components/PersonsForm.js","components/Person.js","components/Persons.js","components/Notification.js","components/services/contacts.js","App.js","index.js"],"names":["Filter","changeHandler","onChange","PersonsForm","submitHandler","nameValue","nameChange","numberValue","numberChange","onSubmit","value","type","Person","person","deleteClick","name","number","onClick","id","Persons","showAll","filteredContacts","persons","map","Notification","props","message","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilteredContacts","setShowAll","setMessage","messageType","setMessageType","useEffect","contactsService","initialPersons","e","filterQuery","target","filtered","filter","toLowerCase","indexOf","length","event","preventDefault","nameObject","contactExists","find","window","confirm","console","log","updatedContact","success","setTimeout","catch","error","alert","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98052e9c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ changeHandler }) => {\n  return (\n    <div>\n      filter shown with <input onChange={changeHandler} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonsForm = ({ submitHandler, nameValue, nameChange, numberValue, numberChange }) => {\n  return (\n    <form onSubmit={submitHandler}>\n      <div>\n        name: <input value={nameValue} onChange={nameChange} />\n      </div>\n      <div>\n        number:\n        <input value={numberValue} onChange={numberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonsForm;\n","import React from \"react\";\n\nconst Person = ({ person, deleteClick }) => <div>{person.name} {person.number} <button onClick={() => deleteClick(person.id, person.name)}>delete</button></div>\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ showAll, filteredContacts, persons, deleteClick }) => {\n  if (showAll) {\n    return persons.map((person) => (\n      <Person key={person.id} person={person} deleteClick={deleteClick} />\n    ));\n  } else {\n    return filteredContacts.map((person) => (\n      <Person key={person.id} person={person} deleteClick={deleteClick} />\n    ));\n  }\n};\n\nexport default Persons;\n","import React from 'react'\n\nconst Notification = (props) => {\n  const {message, type} = props\n  const notificationStyle = {\n    color: type === 'error' ?  'red' : 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if(message === null) {\n    return null\n  }\n\n  return(\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n \nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deleteContact }\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonsForm from \"./components/PersonsForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from './components/Notification'\nimport contactsService from \"./components/services/contacts\";\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filteredContacts, setFilteredContacts] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState('')\n\n  useEffect(() => {\n    contactsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n    }, [])\n\n  const addName = (event) => {\n    event.preventDefault();\n    \n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const contactExists = persons.find((person) => person.name.toLowerCase() === newName.toLowerCase())\n    if(contactExists) {\n      if(window.confirm(`${contactExists.name} is already in your phonebook! Do you want to replace their existing phone number - ${contactExists.number}?`)) {\n        console.log(nameObject, typeof nameObject);\n        contactsService\n          .update(contactExists.id, nameObject)\n          .then(updatedContact =>\n            setPersons(persons.map(person => \n              person.name.toLowerCase() !== updatedContact.name.toLowerCase() \n              ? person : updatedContact))\n            )\n          .then(success => {\n            setMessage(`${contactExists.name} was updated!`)\n            setMessageType('success')\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          }\n          )\n          .catch(error => { \n            setMessage(`Contact information for ${contactExists.name} has already been removed from the server.`)\n            setMessageType('error')\n            setPersons(persons.filter(person => person.id !== contactExists.id))\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      } else {\n        window.alert(`${contactExists.name} hasn't been added or updated.`)\n      } \n    } \n    else {\n      contactsService\n        .create(nameObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n        })\n        .then(success => {\n          setMessage(`${nameObject.name} was added!`)\n          setMessageType('success')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleFilterChange = (e) => {\n    const filterQuery = e.target.value;\n    let filtered = persons.filter((person) => {\n      return (\n        person.name.toLowerCase().indexOf(filterQuery.toLowerCase()) !== -1\n      );\n    });\n    setShowAll(persons.length === filtered.length);\n    setFilteredContacts(filtered);\n  };\n\n  const deleteClick = (id, person) => {\n    if (window.confirm(`Delete ${person}?`)) {\n      contactsService\n      .deleteContact(id)\n      setPersons(persons.filter(person => person.id !== id))\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter changeHandler={handleFilterChange} />\n      <h3>Add new</h3>\n      <PersonsForm\n        submitHandler={addName}\n        nameValue={newName}\n        nameChange={(e) => setNewName(e.target.value)}\n        numberValue={newNumber}\n        numberChange={(e) => setNewNumber(e.target.value)}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        showAll={showAll}\n        filteredContacts={filteredContacts}\n        persons={persons}\n        deleteClick={deleteClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}